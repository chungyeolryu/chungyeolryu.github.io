{"version":3,"file":"static/js/146.3917efc4.chunk.js","mappings":"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","sources":["hooks/useCounter.js","hooks/useTimer.js","pages/Counter.js"],"sourcesContent":["import { useState, useCallback } from \"react\";\n\nexport const useCounter = (initialValue = 0) => {\n\tconst [count, setCount] = useState(initialValue);\n\tconst increment = () => setCount(x => x + 1)\n\tconst decrement = () => setCount(x => x - 1)\n\tconst reset = () => setCount(initialValue || 0);\n\n\treturn {\n\t\tcount,\n\t\tincrement,\n\t\tdecrement,\n\t\treset,\n\t\tsetCount,\n\t  }\n}\n\n  ","import { useEffect, useState, useRef } from \"react\";\n\nexport const useTimer = ({ initialSeconds = 60, onFinish }) => { \n\tconst [timerState, setTimerState] = useState('stop');\n\tconst [sec, setSec] = useState(initialSeconds);\n\t// 타이머 중지를 위한 Id 저장변수\n\tconst intervalId = useRef(null);\n\tconst finishHandler = () => {\n\t\tif (sec <= 0) {\n\t\t\tsetTimerState('finish')\n\t\t\tclearInterval(intervalId.current);\n\t\t\tconsole.log('종료');\n\t\t\tonFinish();\n\t\t}\n\t}\n\n\tconst runTimer = () => {\n\t\tif (timerState == 'running') {\n\t\t\tconsole.log('이미 타이머가 실행중입니다.')\n\t\t\treturn false;\n\t\t}\n\t\tsetTimerState('running');\n\t\tintervalId.current = setInterval(() => {\n\t\t\tsetSec((sec) => sec - 1);\n\t\t}, 1000);\n\t\tconsole.log(sec)\n\t\t// 타이머 0일때만 실행\n\t\tfinishHandler();\n\t\treturn () => clearInterval(intervalId.current);\n\t}\n\n\tuseEffect(() => {\n\t\t// 타이머 0일때만 실행\n\t\tfinishHandler();\n\t}, [sec]);\n\t\n\treturn {\n\t\tsec, \n\t\trunTimer,\n\t\ttimerState\n\t};\n};\n\t","import React from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport {useCounter} from '@hooks/useCounter'\nimport { useTimer } from \"../hooks/useTimer\";\n\nimport styled from 'styled-components'\n\n\nconst StyledContainer = styled.div`\n\t.timer-display {\n\t\tfont-size: 2.5rem;\n\t\tfont-weight: 600;\n\t}\n\t.counter-display {\n\t\tfont-size: 1.6rem;\n\t\tfont-weight: 400;\n\t}\n\t.text-blue {\n\t\tcolor: blue;\n\t}\n\tbutton.circle {\n\t\tmargin: 50px 10px 20px;\n\t\tfont-size: 2.5rem;\n\t\tfont-weight: 600;\n\t\twidth: 200px;\n\t\theight: 200px;\n\t\tbackground-color: #e2e2e2;\n\t\tborder-radius: 50%;\n\t}\n\tbutton.counter-button {\n\t\tbackground-color: blue;\n\t\tcolor: white;\n\t}\n`\n\nexport default function Counter(props) {\n\tconst params = useParams();\n\tconst navigate = useNavigate();\n\tconst kindString = params.kind == 'heart' ? '심박수' : '호흡수'\n\tconst {\n\t\tcount,\n\t\tincrement,\n\t\treset,\n\t  } = useCounter(0);\n\tconst {sec, runTimer, timerState} = useTimer({\n\t\tinitialSeconds: 2,\n\t\tonFinish: function() {\n\t\t\tnavigate(`/counterResult`,{\n\t\t\t\tstate: {\n\t\t\t\t\tcount\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t});\n\t\n\treturn (\n\t\t<StyledContainer>\n\t\t\t<h3>{kindString} 카운터</h3>\n\t\t\t{/* 타이머 */}\n\t\t\t<TimerDisplay sec={sec}></TimerDisplay>\n\t\t\t{/* 카운터 문구 */}\n\t\t\t<CounterDisplay timerState={timerState} count={count}></CounterDisplay>\n\t\t\t\n\t\t\t{/* 버튼 */}\n\t\t\t{ \n\t\t\t\ttimerState === 'stop' ? \n\t\t\t\t(<TimerRunButton onClick={runTimer}> 시작 </TimerRunButton>):\n\t\t\t\t(<CounterButton onClick={increment}> 체크 </CounterButton>)\n\t\t\t\t\n\t\t\t}\n\n\t\t\t{/* 측정방법 설명 */}\n\t\t\t<div>\n\t\t\t\t호흡수의 정상범위는??????<br />\n\t\t\t\t...<br />\n\t\t\t\t..<br />\n\t\t\t\t..<br />\n\t\t\t</div>\n\t\t\t\n\t\t</StyledContainer>\n\t);\n}\n\nfunction CounterDisplay({timerState, count}) {\n\treturn (\n\t\ttimerState === 'stop' ?\n\t\t(<div className=\"counter-display\">준비가 완료되면 시작을 눌러주세요</div>) :\n\t\t(<div className=\"counter-display\"> 분당 <span className=\"text-blue\">{count}회</span> </div>)\n\t)\n}\n\nfunction TimerDisplay({sec}) {\n\treturn (\n\t\t<div className=\"timer-display\">\n\t\t\t{(\"0\" + parseInt(sec / 60)).slice(-2)} :{\" \"}\n\t\t\t{(\"0\" + (sec % 60)).slice(-2)}\n\t\t</div>\n\t);\n}\n\nfunction TimerRunButton({onClick}) {\n\treturn (\n\t\t<button className=\"timer-button circle\" onClick={onClick}> \n\t\t\t시작\n\t\t</button>\n\t)\n}\nfunction CounterButton({onClick}) {\n\treturn (\n\t\t<button className=\"counter-button circle\" onClick={onClick}> \n\t\t\t체크\n\t\t</button>\n\t)\n}\n"],"names":["useCounter","initialValue","arguments","length","undefined","_useState","useState","_useState2","_slicedToArray","count","setCount","increment","x","decrement","reset","useTimer","_ref","_ref$initialSeconds","initialSeconds","onFinish","timerState","setTimerState","_useState3","_useState4","sec","setSec","intervalId","useRef","finishHandler","clearInterval","current","console","log","useEffect","runTimer","setInterval","StyledContainer","styled","_templateObject","_taggedTemplateLiteral","Counter","props","params","useParams","navigate","useNavigate","kindString","kind","_useCounter","_useTimer","state","_jsxs","children","_jsx","TimerDisplay","CounterDisplay","TimerRunButton","onClick","CounterButton","className","_ref2","parseInt","slice","_ref3","_ref4"],"sourceRoot":""}