{"version":3,"file":"static/js/270.54acd6a9.chunk.js","mappings":"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","sources":["components/RecordBoard.js","components/LinkButton.js","components/HealthCheck.js","components/PetInsuBoard.js","components/Profile.js","pages/Main.js"],"sourcesContent":["\nimport { SrecordBoard } from \"../style/styles\"\nimport { useNavigate } from 'react-router-dom';\n\n\nexport default function RecordBoard() {\n\n\n    const navigate = useNavigate();\n    const viewLogPage = () => {\n        navigate('/TotalLog')\n    }\n    return(\n        <SrecordBoard>\n            <div className=\"board-wrap\">\n                <div className=\"srecordBoardTop\">\n                    <div className=\"top-left\">\n                        <div>\n                            <div className=\"topMain\">이번달 건강기록</div>\n                            <div className=\"topSub\">2023.04.23</div>\n                        </div>\n                        <div className=\"btn-log-view\">\n                            <button onClick={viewLogPage}>기록보기</button>\n                        </div>\n                    </div>\n                    <div>\n                        <button>i</button>\n                    </div>\n                </div>\n                <div className=\"log-wrapper\">\n                    <div className=\"srecordBoardMiddle\">\n                        <div className=\"fn-icon\"></div>\n                        <div className=\"fn-name\"><p>눈</p></div>\n                        <div className=\"fn-log\"><p>체크 기록이 없습니다</p></div>\n                    </div>\n                    <div className=\"srecordBoardMiddle\">\n                        <div className=\"fn-icon\"></div>\n                        <div className=\"fn-name\"><p>피부</p></div>\n                        <div className=\"fn-log\"><p>체크 기록이 없습니다</p></div>\n                    </div>\n                    <div className=\"srecordBoardMiddle\">\n                        <div className=\"fn-icon\"></div>\n                        <div className=\"fn-name\"><p>관절</p></div>\n                        <div className=\"fn-log\"><p>체크 기록이 없습니다</p></div>\n                    </div>\n                    <div className=\"srecordBoardMiddle\">\n                        <div className=\"fn-icon\"></div>\n                        <div className=\"fn-name\"><p>호흡수</p></div>\n                        <div className=\"fn-log\"><p>체크 기록이 없습니다</p></div>\n                    </div>\n                    <div className=\"srecordBoardMiddle\">\n                        <div className=\"fn-icon\"></div>\n                        <div className=\"fn-name\"><p>심박수</p></div>\n                        <div className=\"fn-log\"><p>체크 기록이 없습니다</p></div>\n                    </div>\n                    <div className=\"srecordBoardMiddle\">\n                        <div className=\"fn-icon\"></div>\n                        <div className=\"fn-name\"><p>문진</p></div>\n                        <div className=\"fn-log\"><p>체크 기록이 없습니다</p></div>\n                    </div>\n                </div>\n            </div>\n            \n            \n        </SrecordBoard>\n    )\n    \n}","\nimport { SLinkButton } from '../style/styles';\nimport { useNavigate } from 'react-router-dom';\n\nexport default function LinkButton(props) {\n\n   \n    const navigate = useNavigate();\n   \n    const movePageHandler = () => {\n        const link = props.link;\n        navigate(link)\n    }\n\n    return(\n        <SLinkButton onClick={movePageHandler}>\n            <div className='btn-layout'>\n                <img src={process.env.PUBLIC_URL + props.imgPath} className=\"icon\"></img>\n                <div>\n                    <p className=\"btn-title\">{props.title}</p>\n                    <p className='sub-title'>{props.subTitle}</p>\n                </div>\n            </div>\n            <div className='state'>미체크</div>\n        </SLinkButton>\n    )\n}","import LinkButton from \"./LinkButton\";\nimport { SHealthCheck } from '../style/styles';\n\n\nexport default function HealthCheck() {\n\n    const createLinkButtons = [\n\t\t{'title': '눈', 'subTitle': '맑고 깨끗한 눈을 유지해주세요', 'link': '/addPet', 'imgPath': '/image/check-img-eye.svg'},\n\t\t{'title': '피부', 'subTitle': '엽증이 생기면 가려워할 수 있어요', 'link': '/analysisResult', 'imgPath': '/image/check-img-skin.svg'},\n\t\t{'title': '관절', 'subTitle': '슬개골 건강은 미리미리 챙겨주세요', 'link': '/analysisResult', 'imgPath': '/image/check-img-joint.svg'},\n\t\t{'title': '호흡수', 'subTitle': '심장과 호흡기 질환을 예방해주세요', 'link': '/counter/breath', 'imgPath': '/image/check-img-breath.svg'},\n\t\t{'title': '심박수', 'subTitle': '심박 변과학 없는지 확인해주세요', 'link': '/counter/heart', 'imgPath': '/image/check-img-heart-rate.svg'},\n\t\t{'title': '문진', 'subTitle': '마르다는 표현이었는지 알아볼 수 있어요', 'link': '/medicalQuestion', 'imgPath': '/image/check-img-question.svg'},\n\t\t{'title': '통신테스트', 'subTitle': 'fetchTest', 'link': '/test', 'imgPath': '/image/check-img-eye.svg'}\n\t]\n\n    return (\n        <SHealthCheck>\n            <p className=\"title\">건강체크</p>\n            { \n                createLinkButtons.map( (item, index) => {\n                    return <LinkButton key={index} title={item.title} subTitle={item.subTitle} link={item.link} imgPath={item.imgPath} />\n                }) \n            }\n        </SHealthCheck>\n        \n    )\n}","import { SPetInsuBoard } from '../style/styles';\n\nexport default function PetInsuBoard(props) {\n\n    const title = props.info.joinInsuPet ? '동물병원에 \\n 다녀오셨나요?' : '펫보험으로 든든하게 \\n 준비하세요';\n\n    const alert = props.info.registPet && !props.info.joinInsuPet ? '펫보험에 이미 가입하셨다면 프로필에서 설저을 변경 할 수 있어요' : '';\n\n    const iconPath =  props.info.joinInsuPet ? process.env.PUBLIC_URL + '/image/pet-insu-join-icon.svg' : process.env.PUBLIC_URL + '/image/pet-insu-icon.svg';\n    return (\n        <SPetInsuBoard info={props.info}>\n            <div className='content-wrap'>\n                <div className='pet-insu-layout'>\n                    <p className='pet-insu-title'>{title}</p>\n                    <img src={iconPath} className={ props.info.joinInsuPet ? 'pet-insu-join-icon' : 'pet-insu-icon' } ></img>\n                </div>\n                <div className='pet-insu-premium-box'>\n                    <div className='box-plan'>기본플랜</div>\n                    <div className='box-text'>예상보험료</div>\n                    <div className='box-premium'><span className='box-num'>{props.info.premium}</span> 원</div>\n                </div>\n                <div className='pet-insu-bill'>\n                    <p>보험금 청구하기</p>\n                </div>\n            </div>\n            <div className='pet-insu-alert-layout'>\n                <img src={process.env.PUBLIC_URL + '/image/ico-noti.svg'} className='noti-icon'></img>\n                <p className='pet-insu-alert'>{alert}</p>\n            </div>\n        </SPetInsuBoard>\n    )\n}","import React from 'react'\nimport { SPetProfile } from '../style/styles'\n\nexport default function Profile(props) {\n  return (\n\t<SPetProfile onClick={props.onClick}>\n\t\t<img src=\"image/ico-img-profile.svg\" className=\"icoimg_profile\" />\n\t\t<span>{props.name}</span>\n\t\t{/* <div className='rectangle'>\n\t\t\t<div className='path-3'></div>\n\t\t</div> */}\n\t</SPetProfile>\n  )\n}\n","import React, { useEffect, useRef, useState } from \"react\";\n// style\nimport { PageLayout, PetHr } from \"@chac/common/style/sytles\";\nimport { PageMain, BtnTop } from \"../style/styles\";\n// hook\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useGetPetListQuery } from \"../query/dummy\";\nimport { useScroll, motion, useAnimate } from \"framer-motion\"\nimport { useCustomModal } from \"../hooks/useModal\";\n// component\nimport RecordBoard from \"../components/RecordBoard\";\nimport NewPetMain from \"../components/NewPetMain\";\nimport HealthCheck from \"../components/HealthCheck\";\nimport PetInsuBoard from \"../components/PetInsuBoard\";\nimport Profile from \"../components/Profile\";\nimport { setProfile } from \"../store/profileSlice\";\n\n\nexport default function Main() {\n\t// 등록한 펫 정보 목록 가져오기 (petList에 정보 있으면, 펫 1개이상 등록된 고객)\n\tconst {data: petList, isFetching:isPetListFetching, isLoading: isPetListLoading} = useGetPetListQuery()\t\n\tconst [showModal] = useCustomModal();\n\tconst dispatch = useDispatch();\n\tconst profile = useSelector((state) => state.profile);\n\tconsole.log('profile:\t', profile)\n\t/**\n\t * todo:  (해결됨/ 나중에 문서에 옮겨적자)\n\t * useQuery를 통해 가져온 data를 이용해 setProfile 설정할 방법을 못찾고있음.\n\t * 1. useQuery, setProfile로 인해 발생하는 렌더에 의해 무한루프 발생\n\t * \t- useQuery => setProfile => useQuery => setProfile => ...\n\t * \t\t\t=> onQueryStarted: 사용해서 해결됨\n\t * \t\t\t\t해당 함수 내에서 query응답값을 가지고 store에 dispatch 할 수 있음. \n\t */\n\t\n\t// 펫 미등록\n\tconst petInsuInfo1 = {\n\t\t'registPet': false,\n\t\t'joinInsuPet': false,\n\t\t'premium': '???'\n\t}\n\t// 펫등록 & 보험 미가입\n\tconst petInsuInfo2 = {\n\t\t'registPet': true,\n\t\t'joinInsuPet': false,\n\t\t'premium': '32,100'\n\t}\n\t// 펫등록 & 보험가입\n\tconst petInsuInfo3 = {\n\t\t'registPet': true,\n\t\t'joinInsuPet': true,\n\t\t'premium': ''\n\t}\n\n\tconst goToTop = () => {\n\t\tdocument.documentElement.scrollTo({\n\t\t\ttop: 0,\n\t\t\tbehavior: \"smooth\"\n\t\t  });\n\t}\n\n    const changeProfile = () => {\n\t\tshowModal({\n\t\t\tpath: 'SelectPetBottomSheet',\n\t\t\tprops: {\n\t\t\t\tpetList,\n\t\t\t\tprofile, \n\t\t\t\tsetProfile: (data) => dispatch(setProfile(data))\n\t\t\t},\n\t\t\tcloseHandler: function(res) {\n\t\t\t\tconsole.log(res)\n\t\t\t}\n\t\t})\n\t}\n\n\tconst [target, animate] = useAnimate();\n\n\tconst [scrollPosition, setScrollPosition] = useState(0);\n\n\tuseEffect(() => {\n\t\tif (!isPetListLoading) {\n\n\t\t\tanimate(target.current,{opacity: 0},{duration:0});\n\t\t\tlet isShow = false;\n\t\t\tconst updatePosition = () => {\n\t\t\t\tsetScrollPosition(window.pageYOffset);\n\t\t\t\t//console.log('scrollPosition:\t', scrollPosition)\n\t\t\t\t//console.log('window.pageYOffset:\t', window.pageYOffset)\n\t\t\t\tif ( window.pageYOffset >= 150 && !isShow ) {\n\t\t\t\t\t//console.log('scrollPosition11:\t')\n\t\t\t\t\tisShow = true;\n\t\t\t\t\tanimate(target.current,{opacity: 1},{duration:0.3});\n\t\t\t\t} else if ( window.pageYOffset < 150 && isShow ){\n\t\t\t\t\tisShow = false;\n\t\t\t\t\t//console.log('scrollPosition22:\t')\n\t\t\t\t\tanimate(target.current,{opacity: 0},{duration:0.3});\n\t\t\t\t}\n\t\t\t};\n\t\n\t\t\twindow.addEventListener(\"scroll\", updatePosition);\n\t\t\treturn () => window.removeEventListener(\"scroll\", updatePosition);\n\t\t}\n\t}, []);\n\t\n\treturn (\n\t\t<PageLayout>\n\t\t\t<PageMain>\n\t\t\t\t<BtnTop scrollPos={scrollPosition} onClick={goToTop} ref={target}>top</BtnTop>\n\t\t\t\t<Profile name={profile?.name} onClick={changeProfile}></Profile>\n\t\t\t\t{/* <NewPetMain /> */}\n\t\t\t\t<RecordBoard />\n\t\t\t\t<PetHr />\n\t\t\t\t<HealthCheck />\n\t\t\t\t<PetInsuBoard info={petInsuInfo1} />\n\t\t\t\t<PetInsuBoard info={petInsuInfo2} />\n\t\t\t\t<PetInsuBoard info={petInsuInfo3} />\n\t\t\t\t\n\t\t\t\t{/* <div className=\"page-section\">\n\t\t\t\t\t<button className=\"btn-get-point\">문진하고 포인트 받기</button>\n\t\t\t\t</div> */}\n\t\t\t\t\n\t\t\t</PageMain>\n\t\t</PageLayout>\n\t);\n}\n"],"names":["RecordBoard","navigate","useNavigate","_jsx","SrecordBoard","children","_jsxs","className","onClick","LinkButton","props","SLinkButton","link","src","process","imgPath","title","subTitle","HealthCheck","SHealthCheck","map","item","index","PetInsuBoard","info","joinInsuPet","alert","registPet","iconPath","SPetInsuBoard","premium","Profile","SPetProfile","name","Main","_useGetPetListQuery","useGetPetListQuery","petList","data","isPetListLoading","isFetching","isLoading","_useCustomModal","useCustomModal","showModal","_slicedToArray","dispatch","useDispatch","profile","useSelector","state","console","log","_useAnimate","useAnimate","_useAnimate2","target","animate","_useState","useState","_useState2","scrollPosition","setScrollPosition","useEffect","current","opacity","duration","isShow","updatePosition","window","pageYOffset","addEventListener","removeEventListener","PageLayout","PageMain","BtnTop","scrollPos","document","documentElement","scrollTo","top","behavior","ref","path","setProfile","closeHandler","res","PetHr"],"sourceRoot":""}