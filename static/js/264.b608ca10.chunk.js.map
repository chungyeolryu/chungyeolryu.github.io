{"version":3,"file":"static/js/264.b608ca10.chunk.js","mappings":"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","sources":["../../../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../../../node_modules/framer-motion/dist/es/utils/noop.mjs","../../../node_modules/framer-motion/dist/es/utils/errors.mjs","../../../node_modules/framer-motion/dist/es/render/dom/utils/resolve-element.mjs","../../../node_modules/framer-motion/dist/es/render/store.mjs","../../../node_modules/framer-motion/dist/es/animation/GroupPlaybackControls.mjs","../../../node_modules/framer-motion/dist/es/frameloop/data.mjs","../../../node_modules/framer-motion/dist/es/frameloop/index.mjs","../../../node_modules/framer-motion/dist/es/frameloop/create-render-step.mjs","../../../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../../../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../../../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../../../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../../../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../../../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../../../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../../../node_modules/framer-motion/dist/es/animation/animators/waapi/supports.mjs","../../../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../../../node_modules/framer-motion/dist/es/easing/ease.mjs","../../../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../../../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../../../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../../../node_modules/framer-motion/dist/es/easing/circ.mjs","../../../node_modules/framer-motion/dist/es/easing/back.mjs","../../../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../../../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../../../node_modules/framer-motion/dist/es/value/types/utils.mjs","../../../node_modules/framer-motion/dist/es/utils/clamp.mjs","../../../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../../../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../../../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../../../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../../../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../../../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../../../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../../../node_modules/framer-motion/dist/es/utils/mix.mjs","../../../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../../../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../../../node_modules/framer-motion/dist/es/utils/pipe.mjs","../../../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../../../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../../../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../../../node_modules/framer-motion/dist/es/utils/progress.mjs","../../../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../../../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../../../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../../../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../../../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../../../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../../../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../../../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../../../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../../../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../../../node_modules/framer-motion/dist/es/animation/animators/js/driver-frameloop.mjs","../../../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../../../node_modules/framer-motion/dist/es/animation/animators/js/index.mjs","../../../node_modules/framer-motion/dist/es/animation/animators/waapi/create-accelerated-animation.mjs","../../../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../../../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../../../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../../../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../../../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../../../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../../../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../../../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../../../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../../../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../../../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../../../node_modules/framer-motion/dist/es/animation/utils/wildcards.mjs","../../../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../../../node_modules/framer-motion/dist/es/animation/animators/instant.mjs","../../../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../../../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../../../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../../../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../../../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../../../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../../../node_modules/framer-motion/dist/es/utils/array.mjs","../../../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../../../node_modules/framer-motion/dist/es/value/index.mjs","../../../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../../../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../../../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../../../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../../../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../../../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../../../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../../../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../../../node_modules/@babel/runtime/helpers/esm/get.js","../../../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../../../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../../../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../../../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../../../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../../../node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js","../../../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../../../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../../../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../../../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../../../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../../../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../../../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../../../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../../../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../../../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../../../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../../../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../../../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../../../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../../../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../../../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../../../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../../../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../../../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../../../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../../../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../../../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../../../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../../../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../../../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../../../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../../../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../../../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../../../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../../../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../../../node_modules/framer-motion/dist/es/animation/utils/create-visual-element.mjs","../../../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../../../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","../../../node_modules/framer-motion/dist/es/animation/sequence/utils/calc-time.mjs","../../../node_modules/framer-motion/dist/es/utils/wrap.mjs","../../../node_modules/framer-motion/dist/es/easing/utils/get-easing-for-segment.mjs","../../../node_modules/framer-motion/dist/es/animation/sequence/utils/edit.mjs","../../../node_modules/framer-motion/dist/es/animation/sequence/utils/sort.mjs","../../../node_modules/framer-motion/dist/es/animation/sequence/create.mjs","../../../node_modules/framer-motion/dist/es/easing/utils/create-generator-easing.mjs","../../../node_modules/framer-motion/dist/es/animation/animate.mjs","../../../node_modules/framer-motion/dist/es/animation/utils/is-dom-keyframes.mjs","../../../node_modules/framer-motion/dist/es/animation/hooks/use-animate.mjs","../../../node_modules/framer-motion/dist/es/utils/use-unmount-effect.mjs"],"sourcesContent":["import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","const noop = (any) => any;\n\nexport { noop };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","import { invariant } from '../../../utils/errors.mjs';\n\nfunction resolveElements(elements, scope, selectorCache) {\n    var _a;\n    if (typeof elements === \"string\") {\n        let root = document;\n        if (scope) {\n            invariant(Boolean(scope.current), \"Scope provided, but no element detected.\");\n            root = scope.current;\n        }\n        if (selectorCache) {\n            (_a = selectorCache[elements]) !== null && _a !== void 0 ? _a : (selectorCache[elements] = root.querySelectorAll(elements));\n            elements = selectorCache[elements];\n        }\n        else {\n            elements = root.querySelectorAll(elements);\n        }\n    }\n    else if (elements instanceof Element) {\n        elements = [elements];\n    }\n    /**\n     * Return an empty array\n     */\n    return Array.from(elements || []);\n}\n\nexport { resolveElements };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","class GroupPlaybackControls {\n    constructor(animations) {\n        this.animations = animations.filter(Boolean);\n    }\n    then(onResolve, onReject) {\n        return Promise.all(this.animations).then(onResolve).catch(onReject);\n    }\n    /**\n     * TODO: Filter out cancelled or stopped animations before returning\n     */\n    getAll(propName) {\n        return this.animations[0][propName];\n    }\n    setAll(propName, newValue) {\n        for (let i = 0; i < this.animations.length; i++) {\n            this.animations[i][propName] = newValue;\n        }\n    }\n    get time() {\n        return this.getAll(\"time\");\n    }\n    set time(time) {\n        this.setAll(\"time\", time);\n    }\n    get speed() {\n        return this.getAll(\"speed\");\n    }\n    set speed(speed) {\n        this.setAll(\"speed\", speed);\n    }\n    get duration() {\n        let max = 0;\n        for (let i = 0; i < this.animations.length; i++) {\n            max = Math.max(max, this.animations[i].duration);\n        }\n        return max;\n    }\n    runAll(methodName) {\n        this.animations.forEach((controls) => controls[methodName]());\n    }\n    play() {\n        this.runAll(\"play\");\n    }\n    pause() {\n        this.runAll(\"pause\");\n    }\n    stop() {\n        this.runAll(\"stop\");\n    }\n    cancel() {\n        this.runAll(\"cancel\");\n    }\n    complete() {\n        this.runAll(\"complete\");\n    }\n}\n\nexport { GroupPlaybackControls };\n","const frameData = {\n    delta: 0,\n    timestamp: 0,\n    isProcessing: false,\n};\n\nexport { frameData };\n","import { createRenderStep } from './create-render-step.mjs';\nimport { frameData } from './data.mjs';\n\nconst maxElapsed = 40;\nlet useDefaultElapsed = true;\nlet runNextFrame = false;\nconst stepsOrder = [\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst steps = stepsOrder.reduce((acc, key) => {\n    acc[key] = createRenderStep(() => (runNextFrame = true));\n    return acc;\n}, {});\nconst processStep = (stepId) => steps[stepId].process(frameData);\nconst processFrame = (timestamp) => {\n    runNextFrame = false;\n    frameData.delta = useDefaultElapsed\n        ? 1000 / 60\n        : Math.max(Math.min(timestamp - frameData.timestamp, maxElapsed), 1);\n    frameData.timestamp = timestamp;\n    frameData.isProcessing = true;\n    stepsOrder.forEach(processStep);\n    frameData.isProcessing = false;\n    if (runNextFrame) {\n        useDefaultElapsed = false;\n        requestAnimationFrame(processFrame);\n    }\n};\nconst startLoop = () => {\n    runNextFrame = true;\n    useDefaultElapsed = true;\n    if (!frameData.isProcessing)\n        requestAnimationFrame(processFrame);\n};\nconst frame = stepsOrder.reduce((acc, key) => {\n    const step = steps[key];\n    acc[key] = (process, keepAlive = false, immediate = false) => {\n        if (!runNextFrame)\n            startLoop();\n        return step.schedule(process, keepAlive, immediate);\n    };\n    return acc;\n}, {});\nfunction cancelFrame(process) {\n    stepsOrder.forEach((key) => steps[key].cancel(process));\n}\n\nexport { cancelFrame, frame, steps, stepsOrder };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two arrays, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let toRun = [];\n    let toRunNextFrame = [];\n    /**\n     *\n     */\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const buffer = addToCurrentFrame ? toRun : toRunNextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            // If the buffer doesn't already contain this callback, add it\n            if (buffer.indexOf(callback) === -1) {\n                buffer.push(callback);\n                // If we're adding it to the currently running buffer, update its measured size\n                if (addToCurrentFrame && isProcessing)\n                    numToRun = toRun.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            const index = toRunNextFrame.indexOf(callback);\n            if (index !== -1)\n                toRunNextFrame.splice(index, 1);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [toRun, toRunNextFrame] = [toRunNextFrame, toRun];\n            // Clear the next frame list\n            toRunNextFrame.length = 0;\n            // Execute this frame\n            numToRun = toRun.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = toRun[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return isBezierDefinition(easing)\n        ? cubicBezierAsString(easing)\n        : Array.isArray(easing)\n            ? easing.map(mapEasingToNativeEasing)\n            : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const featureTests = {\n    waapi: () => Object.hasOwnProperty.call(Element.prototype, \"animate\"),\n};\nconst results = {};\nconst supports = {};\n/**\n * Generate features tests that cache their results.\n */\nfor (const key in featureTests) {\n    supports[key] = () => {\n        if (results[key] === undefined)\n            results[key] = featureTests[key]();\n        return results[key];\n    };\n}\n\nexport { supports };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from './errors.mjs';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst isCSSVariableToken = checkStringStartsWith(\"var(--\");\nconst cssVariableRegex = /var\\s*\\(\\s*--[\\w-]+(\\s*,\\s*(?:(?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)+)?\\s*\\)/g;\n\nexport { cssVariableRegex, isCSSVariableName, isCSSVariableToken };\n","import { cssVariableRegex } from '../../../render/dom/utils/is-css-variable.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { colorRegex, floatRegex, isString, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst cssVarTokeniser = {\n    regex: cssVariableRegex,\n    countKey: \"Vars\",\n    token: \"${v}\",\n    parse: noop,\n};\nconst colorTokeniser = {\n    regex: colorRegex,\n    countKey: \"Colors\",\n    token: \"${c}\",\n    parse: color.parse,\n};\nconst numberTokeniser = {\n    regex: floatRegex,\n    countKey: \"Numbers\",\n    token: \"${n}\",\n    parse: number.parse,\n};\nfunction tokenise(info, { regex, countKey, token, parse }) {\n    const matches = info.tokenised.match(regex);\n    if (!matches)\n        return;\n    info[\"num\" + countKey] = matches.length;\n    info.tokenised = info.tokenised.replace(regex, token);\n    info.values.push(...matches.map(parse));\n}\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const info = {\n        value: originalValue,\n        tokenised: originalValue,\n        values: [],\n        numVars: 0,\n        numColors: 0,\n        numNumbers: 0,\n    };\n    if (info.value.includes(\"var(--\"))\n        tokenise(info, cssVarTokeniser);\n    tokenise(info, colorTokeniser);\n    tokenise(info, numberTokeniser);\n    return info;\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, numVars, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            if (i < numVars) {\n                output = output.replace(cssVarTokeniser.token, v[i]);\n            }\n            else if (i < numVars + numColors) {\n                output = output.replace(colorTokeniser.token, color.transform(v[i]));\n            }\n            else {\n                output = output.replace(numberTokeniser.token, sanitize(v[i]));\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nconst mixImmediate = (origin, target) => (p) => `${p > 0 ? target : origin}`;\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return origin.startsWith(\"var(\")\n            ? mixImmediate(origin, target)\n            : mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numVars === targetStats.numVars &&\n        originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        return color.test(v) ? mixColor : mixComplex;\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { mix } from '../mix.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    const initialVelocity = velocity ? -millisecondsToSeconds(velocity) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t > timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { frame, cancelFrame } from '../../../frameloop/index.mjs';\nimport { frameData } from '../../../frameloop/data.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => frameData.isProcessing ? frameData.timestamp : performance.now(),\n    };\n};\n\nexport { frameloopDriver };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { keyframes } from '../../generators/keyframes.mjs';\nimport { spring } from '../../generators/spring/index.mjs';\nimport { inertia } from '../../generators/inertia.mjs';\nimport { frameloopDriver } from './driver-frameloop.mjs';\nimport { interpolate } from '../../../utils/interpolate.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorDuration } from '../../generators/utils/calc-duration.mjs';\n\nconst types = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\n/**\n * Animate a single value on the main thread.\n *\n * This function is written, where functionality overlaps,\n * to be largely spec-compliant with WAAPI to allow fungibility\n * between the two.\n */\nfunction animateValue({ autoplay = true, delay = 0, driver = frameloopDriver, keyframes: keyframes$1, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", onPlay, onStop, onComplete, onUpdate, ...options }) {\n    let speed = 1;\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Create a new finished Promise every time we enter the\n     * finished state and resolve the old Promise. This is\n     * WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        resolveFinishedPromise && resolveFinishedPromise();\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let animationDriver;\n    const generatorFactory = types[type] || keyframes;\n    /**\n     * If this isn't the keyframes generator and we've been provided\n     * strings as keyframes, we need to interpolate these.\n     * TODO: Support velocity for units and complex value types/\n     */\n    let mapNumbersToKeyframes;\n    if (generatorFactory !== keyframes &&\n        typeof keyframes$1[0] !== \"number\") {\n        mapNumbersToKeyframes = interpolate([0, 100], keyframes$1, {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n    let mirroredGenerator;\n    if (repeatType === \"mirror\") {\n        mirroredGenerator = generatorFactory({\n            ...options,\n            keyframes: [...keyframes$1].reverse(),\n            velocity: -(options.velocity || 0),\n        });\n    }\n    let playState = \"idle\";\n    let holdTime = null;\n    let startTime = null;\n    let cancelTime = null;\n    /**\n     * If duration is undefined and we have repeat options,\n     * we need to calculate a duration from the generator.\n     *\n     * We set it to the generator itself to cache the duration.\n     * Any timeline resolver will need to have already precalculated\n     * the duration by this step.\n     */\n    if (generator.calculatedDuration === null && repeat) {\n        generator.calculatedDuration = calcGeneratorDuration(generator);\n    }\n    const { calculatedDuration } = generator;\n    let resolvedDuration = Infinity;\n    let totalDuration = Infinity;\n    if (calculatedDuration !== null) {\n        resolvedDuration = calculatedDuration + repeatDelay;\n        totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n    }\n    let currentTime = 0;\n    const tick = (timestamp) => {\n        if (startTime === null)\n            return;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (speed > 0)\n            startTime = Math.min(startTime, timestamp);\n        if (holdTime !== null) {\n            currentTime = holdTime;\n        }\n        else {\n            currentTime = (timestamp - startTime) * speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = currentTime - delay;\n        const isInDelayPhase = timeWithoutDelay < 0;\n        currentTime = Math.max(timeWithoutDelay, 0);\n        /**\n         * If this animation has finished, set the current time\n         * to the total duration.\n         */\n        if (playState === \"finished\" && holdTime === null) {\n            currentTime = totalDuration;\n        }\n        let elapsed = currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = currentTime / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const iterationIsOdd = Boolean(currentIteration % 2);\n            if (iterationIsOdd) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            let p = clamp(0, 1, iterationProgress);\n            if (currentTime > totalDuration) {\n                p = repeatType === \"reverse\" && iterationIsOdd ? 1 : 0;\n            }\n            elapsed = p * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes$1[0] }\n            : frameGenerator.next(elapsed);\n        if (mapNumbersToKeyframes) {\n            state.value = mapNumbersToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done = currentTime >= totalDuration;\n        }\n        const isAnimationFinished = holdTime === null &&\n            (playState === \"finished\" ||\n                (playState === \"running\" && done) ||\n                (speed < 0 && currentTime <= 0));\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            finish();\n        }\n        return state;\n    };\n    const stopAnimationDriver = () => {\n        animationDriver && animationDriver.stop();\n        animationDriver = undefined;\n    };\n    const cancel = () => {\n        playState = \"idle\";\n        stopAnimationDriver();\n        updateFinishedPromise();\n        startTime = cancelTime = null;\n    };\n    const finish = () => {\n        playState = \"finished\";\n        onComplete && onComplete();\n        stopAnimationDriver();\n        updateFinishedPromise();\n    };\n    const play = () => {\n        if (hasStopped)\n            return;\n        if (!animationDriver)\n            animationDriver = driver(tick);\n        const now = animationDriver.now();\n        onPlay && onPlay();\n        if (holdTime !== null) {\n            startTime = now - holdTime;\n        }\n        else if (!startTime || playState === \"finished\") {\n            startTime = now;\n        }\n        cancelTime = startTime;\n        holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        playState = \"running\";\n        animationDriver.start();\n    };\n    if (autoplay) {\n        play();\n    }\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(currentTime);\n        },\n        set time(newTime) {\n            newTime = secondsToMilliseconds(newTime);\n            currentTime = newTime;\n            if (holdTime !== null || !animationDriver || speed === 0) {\n                holdTime = newTime;\n            }\n            else {\n                startTime = animationDriver.now() - newTime / speed;\n            }\n        },\n        get duration() {\n            const duration = generator.calculatedDuration === null\n                ? calcGeneratorDuration(generator)\n                : generator.calculatedDuration;\n            return millisecondsToSeconds(duration);\n        },\n        get speed() {\n            return speed;\n        },\n        set speed(newSpeed) {\n            if (newSpeed === speed || !animationDriver)\n                return;\n            speed = newSpeed;\n            controls.time = millisecondsToSeconds(currentTime);\n        },\n        get state() {\n            return playState;\n        },\n        play,\n        pause: () => {\n            playState = \"paused\";\n            holdTime = currentTime;\n        },\n        stop: () => {\n            hasStopped = true;\n            if (playState === \"idle\")\n                return;\n            playState = \"idle\";\n            onStop && onStop();\n            cancel();\n        },\n        cancel: () => {\n            if (cancelTime !== null)\n                tick(cancelTime);\n            cancel();\n        },\n        complete: () => {\n            playState = \"finished\";\n        },\n        sample: (elapsed) => {\n            startTime = 0;\n            return tick(elapsed);\n        },\n    };\n    return controls;\n}\n\nexport { animateValue };\n","import { cancelFrame, frame } from '../../../frameloop/index.mjs';\nimport { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { supports } from './supports.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { animateValue } from '../js/index.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    \"backgroundColor\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supports.waapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0 &&\n        options.type !== \"inertia\";\n    if (!canAccelerateAnimation)\n        return false;\n    /**\n     * TODO: Unify with js/index\n     */\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Create a new finished Promise every time we enter the\n     * finished state and resolve the old Promise. This is\n     * WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let { keyframes, duration = 300, ease, times } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            delay: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < maxDuration) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        times = undefined;\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n        times,\n    });\n    const cancelAnimation = () => animation.cancel();\n    const safeCancel = () => {\n        frame.update(cancelAnimation);\n        resolveFinishedPromise();\n        updateFinishedPromise();\n    };\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        onComplete && onComplete();\n        safeCancel();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    return {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(animation.currentTime || 0);\n        },\n        set time(newTime) {\n            animation.currentTime = secondsToMilliseconds(newTime);\n        },\n        get speed() {\n            return animation.playbackRate;\n        },\n        set speed(newSpeed) {\n            animation.playbackRate = newSpeed;\n        },\n        get duration() {\n            return millisecondsToSeconds(duration);\n        },\n        play: () => {\n            if (hasStopped)\n                return;\n            animation.play();\n            /**\n             * Cancel any pending cancel tasks\n             */\n            cancelFrame(cancelAnimation);\n        },\n        pause: () => animation.pause(),\n        stop: () => {\n            hasStopped = true;\n            if (animation.playState === \"idle\")\n                return;\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            safeCancel();\n        },\n        complete: () => animation.finish(),\n        cancel: safeCancel,\n    };\n}\n\nexport { createAcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        complex.test(value) && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\n\n/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction isZero(value) {\n    return (value === 0 ||\n        (typeof value === \"string\" &&\n            parseFloat(value) === 0 &&\n            value.indexOf(\" \") === -1));\n}\nfunction getZeroUnit(potentialUnitType) {\n    return typeof potentialUnitType === \"number\"\n        ? 0\n        : getAnimatableNone(\"\", potentialUnitType);\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, getZeroUnit, isTransitionDefined, isZero };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isZero, getZeroUnit } from './transitions.mjs';\nimport { fillWildcardKeyframes } from './wildcards.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let origin = transition.from !== undefined ? transition.from : value.get();\n    if (origin === \"none\" && isTargetAnimatable && typeof target === \"string\") {\n        /**\n         * If we're trying to animate from \"none\", try and get an animatable version\n         * of the target. This could be improved to work both ways.\n         */\n        origin = getAnimatableNone(valueName, target);\n    }\n    else if (isZero(origin) && typeof target === \"string\") {\n        origin = getZeroUnit(target);\n    }\n    else if (!Array.isArray(target) &&\n        isZero(target) &&\n        typeof origin === \"string\") {\n        target = getZeroUnit(origin);\n    }\n    /**\n     * If the target has been defined as a series of keyframes\n     */\n    if (Array.isArray(target)) {\n        return fillWildcardKeyframes(origin, target);\n    }\n    else {\n        return [origin, target];\n    }\n}\n\nexport { getKeyframes };\n","function fillWildcardKeyframes(origin, [...keyframes]) {\n    /**\n     * Ensure an wildcard keyframes are hydrated by the origin.\n     */\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] === null) {\n            keyframes[i] = i === 0 ? origin : keyframes[i - 1];\n        }\n    }\n    return keyframes;\n}\n\nexport { fillWildcardKeyframes };\n","import { warning } from '../../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from '../animators/waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from '../animators/instant.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isAnimatable } from '../utils/is-animatable.mjs';\nimport { getKeyframes } from '../utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { animateValue } from '../animators/js/index.mjs';\n\nconst animateMotionValue = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ease: \"easeOut\",\n            ...valueTransition,\n            delay: -elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(options);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { animateMotionValue };\n","import { animateValue } from './js/index.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nfunction createInstantAnimation({ keyframes, delay, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        /**\n         * TODO: As this API grows it could make sense to always return\n         * animateValue. This will be a bigger project as animateValue\n         * is frame-locked whereas this function resolves instantly.\n         * This is a behavioural change and also has ramifications regarding\n         * assumptions within tests.\n         */\n        return {\n            time: 0,\n            speed: 1,\n            duration: 0,\n            play: (noop),\n            pause: (noop),\n            stop: (noop),\n            then: (resolve) => {\n                resolve();\n                return Promise.resolve();\n            },\n            cancel: (noop),\n            complete: (noop),\n        };\n    };\n    return delay\n        ? animateValue({\n            keyframes: [0, 1],\n            duration: 0,\n            delay,\n            onComplete: setValue,\n        })\n        : setValue();\n}\n\nexport { createInstantAnimation };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { frameData } from '../frameloop/data.mjs';\nimport { frame } from '../frameloop/index.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"10.12.5\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                frame.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => frame.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, motionValue };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { frame } from '../../frameloop/index.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = { delay, elapsed: 0, ...transition };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations && !value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        const animation = value.animation;\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            transitionEnd && setTarget(visualElement, transitionEnd);\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        if (!transitionEnd)\n            transitionEnd = {};\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { parseCSSVariable, resolveCSSVariables };\n","export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure \" + obj);\n}","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                /**\n                 * Don't allow wildcard keyframes to be used to detect\n                 * a difference in value types.\n                 */\n                if (to[i] === null)\n                    break;\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { frame, cancelFrame } from '../frameloop/index.mjs';\nimport { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                frame.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, projectionId, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(projectionId, this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update(this.props, this.prevProps);\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"10.12.5\", `Attempting to mix Framer Motion versions ${nextValue.version} with 10.12.5 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { SVGVisualElement } from '../../render/svg/SVGVisualElement.mjs';\nimport { HTMLVisualElement } from '../../render/html/HTMLVisualElement.mjs';\nimport { visualElementStore } from '../../render/store.mjs';\n\nfunction createVisualElement(element) {\n    const options = {\n        presenceContext: null,\n        props: {},\n        visualState: {\n            renderState: {\n                transform: {},\n                transformOrigin: {},\n                style: {},\n                vars: {},\n                attrs: {},\n            },\n            latestValues: {},\n        },\n    };\n    const node = isSVGElement(element)\n        ? new SVGVisualElement(options, {\n            enableHardwareAcceleration: false,\n        })\n        : new HTMLVisualElement(options, {\n            enableHardwareAcceleration: true,\n        });\n    node.mount(element);\n    visualElementStore.set(element, node);\n}\n\nexport { createVisualElement };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","/**\n * Given a absolute or relative time definition and current/prev time state of the sequence,\n * calculate an absolute time for the next keyframes.\n */\nfunction calcNextTime(current, next, prev, labels) {\n    var _a;\n    if (typeof next === \"number\") {\n        return next;\n    }\n    else if (next.startsWith(\"-\") || next.startsWith(\"+\")) {\n        return Math.max(0, current + parseFloat(next));\n    }\n    else if (next === \"<\") {\n        return prev;\n    }\n    else {\n        return (_a = labels.get(next)) !== null && _a !== void 0 ? _a : current;\n    }\n}\n\nexport { calcNextTime };\n","const wrap = (min, max, v) => {\n    const rangeSize = max - min;\n    return ((((v - min) % rangeSize) + rangeSize) % rangeSize) + min;\n};\n\nexport { wrap };\n","import { wrap } from '../../utils/wrap.mjs';\nimport { isEasingArray } from './is-easing-array.mjs';\n\nfunction getEasingForSegment(easing, i) {\n    return isEasingArray(easing) ? easing[wrap(0, easing.length, i)] : easing;\n}\n\nexport { getEasingForSegment };\n","import { getEasingForSegment } from '../../../easing/utils/get-easing-for-segment.mjs';\nimport { removeItem } from '../../../utils/array.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\nfunction eraseKeyframes(sequence, startTime, endTime) {\n    for (let i = 0; i < sequence.length; i++) {\n        const keyframe = sequence[i];\n        if (keyframe.at > startTime && keyframe.at < endTime) {\n            removeItem(sequence, keyframe);\n            // If we remove this item we have to push the pointer back one\n            i--;\n        }\n    }\n}\nfunction addKeyframes(sequence, keyframes, easing, offset, startTime, endTime) {\n    /**\n     * Erase every existing value between currentTime and targetTime,\n     * this will essentially splice this timeline into any currently\n     * defined ones.\n     */\n    eraseKeyframes(sequence, startTime, endTime);\n    for (let i = 0; i < keyframes.length; i++) {\n        sequence.push({\n            value: keyframes[i],\n            at: mix(startTime, endTime, offset[i]),\n            easing: getEasingForSegment(easing, i),\n        });\n    }\n}\n\nexport { addKeyframes, eraseKeyframes };\n","function compareByTime(a, b) {\n    if (a.at === b.at) {\n        if (a.value === null)\n            return 1;\n        if (b.value === null)\n            return -1;\n        return 0;\n    }\n    else {\n        return a.at - b.at;\n    }\n}\n\nexport { compareByTime };\n","import { createGeneratorEasing } from '../../easing/utils/create-generator-easing.mjs';\nimport { resolveElements } from '../../render/dom/utils/resolve-element.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { fillOffset } from '../../utils/offsets/fill.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { calcNextTime } from './utils/calc-time.mjs';\nimport { addKeyframes } from './utils/edit.mjs';\nimport { compareByTime } from './utils/sort.mjs';\n\nconst defaultSegmentEasing = \"easeInOut\";\nfunction createAnimationsFromSequence(sequence, { defaultTransition = {}, ...sequenceTransition } = {}, scope) {\n    const defaultDuration = defaultTransition.duration || 0.3;\n    const animationDefinitions = new Map();\n    const sequences = new Map();\n    const elementCache = {};\n    const timeLabels = new Map();\n    let prevTime = 0;\n    let currentTime = 0;\n    let totalDuration = 0;\n    /**\n     * Build the timeline by mapping over the sequence array and converting\n     * the definitions into keyframes and offsets with absolute time values.\n     * These will later get converted into relative offsets in a second pass.\n     */\n    for (let i = 0; i < sequence.length; i++) {\n        const segment = sequence[i];\n        /**\n         * If this is a timeline label, mark it and skip the rest of this iteration.\n         */\n        if (typeof segment === \"string\") {\n            timeLabels.set(segment, currentTime);\n            continue;\n        }\n        else if (!Array.isArray(segment)) {\n            timeLabels.set(segment.name, calcNextTime(currentTime, segment.at, prevTime, timeLabels));\n            continue;\n        }\n        let [subject, keyframes, transition = {}] = segment;\n        /**\n         * If a relative or absolute time value has been specified we need to resolve\n         * it in relation to the currentTime.\n         */\n        if (transition.at !== undefined) {\n            currentTime = calcNextTime(currentTime, transition.at, prevTime, timeLabels);\n        }\n        /**\n         * Keep track of the maximum duration in this definition. This will be\n         * applied to currentTime once the definition has been parsed.\n         */\n        let maxDuration = 0;\n        const resolveValueSequence = (valueKeyframes, valueTransition, valueSequence, elementIndex = 0, numElements = 0) => {\n            const valueKeyframesAsList = keyframesAsList(valueKeyframes);\n            const { delay = 0, times = defaultOffset(valueKeyframesAsList), type = \"keyframes\", ...remainingTransition } = valueTransition;\n            let { ease = defaultTransition.ease || \"easeOut\", duration } = valueTransition;\n            /**\n             * Resolve stagger() if defined.\n             */\n            const calculatedDelay = typeof delay === \"function\"\n                ? delay(elementIndex, numElements)\n                : delay;\n            /**\n             * If this animation should and can use a spring, generate a spring easing function.\n             */\n            const numKeyframes = valueKeyframesAsList.length;\n            if (numKeyframes <= 2 && type === \"spring\") {\n                /**\n                 * As we're creating an easing function from a spring,\n                 * ideally we want to generate it using the real distance\n                 * between the two keyframes. However this isn't always\n                 * possible - in these situations we use 0-100.\n                 */\n                let absoluteDelta = 100;\n                if (numKeyframes === 2 &&\n                    isNumberKeyframesArray(valueKeyframesAsList)) {\n                    const delta = valueKeyframesAsList[1] - valueKeyframesAsList[0];\n                    absoluteDelta = Math.abs(delta);\n                }\n                const springTransition = { ...remainingTransition };\n                if (duration !== undefined) {\n                    springTransition.duration = secondsToMilliseconds(duration);\n                }\n                const springEasing = createGeneratorEasing(springTransition, absoluteDelta);\n                ease = springEasing.ease;\n                duration = springEasing.duration;\n            }\n            duration !== null && duration !== void 0 ? duration : (duration = defaultDuration);\n            const startTime = currentTime + calculatedDelay;\n            const targetTime = startTime + duration;\n            /**\n             * If there's only one time offset of 0, fill in a second with length 1\n             */\n            if (times.length === 1 && times[0] === 0) {\n                times[1] = 1;\n            }\n            /**\n             * Fill out if offset if fewer offsets than keyframes\n             */\n            const remainder = times.length - valueKeyframesAsList.length;\n            remainder > 0 && fillOffset(times, remainder);\n            /**\n             * If only one value has been set, ie [1], push a null to the start of\n             * the keyframe array. This will let us mark a keyframe at this point\n             * that will later be hydrated with the previous value.\n             */\n            valueKeyframesAsList.length === 1 &&\n                valueKeyframesAsList.unshift(null);\n            /**\n             * Add keyframes, mapping offsets to absolute time.\n             */\n            addKeyframes(valueSequence, valueKeyframesAsList, ease, times, startTime, targetTime);\n            maxDuration = Math.max(calculatedDelay + duration, maxDuration);\n            totalDuration = Math.max(targetTime, totalDuration);\n        };\n        if (isMotionValue(subject)) {\n            const subjectSequence = getSubjectSequence(subject, sequences);\n            resolveValueSequence(keyframes, transition, getValueSequence(\"default\", subjectSequence));\n        }\n        else {\n            /**\n             * Find all the elements specified in the definition and parse value\n             * keyframes from their timeline definitions.\n             */\n            const elements = resolveElements(subject, scope, elementCache);\n            const numElements = elements.length;\n            /**\n             * For every element in this segment, process the defined values.\n             */\n            for (let elementIndex = 0; elementIndex < numElements; elementIndex++) {\n                /**\n                 * Cast necessary, but we know these are of this type\n                 */\n                keyframes = keyframes;\n                transition = transition;\n                const element = elements[elementIndex];\n                const subjectSequence = getSubjectSequence(element, sequences);\n                for (const key in keyframes) {\n                    resolveValueSequence(keyframes[key], getValueTransition(transition, key), getValueSequence(key, subjectSequence), elementIndex, numElements);\n                }\n            }\n            prevTime = currentTime;\n            currentTime += maxDuration;\n        }\n    }\n    /**\n     * For every element and value combination create a new animation.\n     */\n    sequences.forEach((valueSequences, element) => {\n        for (const key in valueSequences) {\n            const valueSequence = valueSequences[key];\n            /**\n             * Arrange all the keyframes in ascending time order.\n             */\n            valueSequence.sort(compareByTime);\n            const keyframes = [];\n            const valueOffset = [];\n            const valueEasing = [];\n            /**\n             * For each keyframe, translate absolute times into\n             * relative offsets based on the total duration of the timeline.\n             */\n            for (let i = 0; i < valueSequence.length; i++) {\n                const { at, value, easing } = valueSequence[i];\n                keyframes.push(value);\n                valueOffset.push(progress(0, totalDuration, at));\n                valueEasing.push(easing || \"easeOut\");\n            }\n            /**\n             * If the first keyframe doesn't land on offset: 0\n             * provide one by duplicating the initial keyframe. This ensures\n             * it snaps to the first keyframe when the animation starts.\n             */\n            if (valueOffset[0] !== 0) {\n                valueOffset.unshift(0);\n                keyframes.unshift(keyframes[0]);\n                valueEasing.unshift(defaultSegmentEasing);\n            }\n            /**\n             * If the last keyframe doesn't land on offset: 1\n             * provide one with a null wildcard value. This will ensure it\n             * stays static until the end of the animation.\n             */\n            if (valueOffset[valueOffset.length - 1] !== 1) {\n                valueOffset.push(1);\n                keyframes.push(null);\n            }\n            if (!animationDefinitions.has(element)) {\n                animationDefinitions.set(element, {\n                    keyframes: {},\n                    transition: {},\n                });\n            }\n            const definition = animationDefinitions.get(element);\n            definition.keyframes[key] = keyframes;\n            definition.transition[key] = {\n                ...defaultTransition,\n                duration: totalDuration,\n                ease: valueEasing,\n                times: valueOffset,\n                ...sequenceTransition,\n            };\n        }\n    });\n    return animationDefinitions;\n}\nfunction getSubjectSequence(subject, sequences) {\n    !sequences.has(subject) && sequences.set(subject, {});\n    return sequences.get(subject);\n}\nfunction getValueSequence(name, sequences) {\n    if (!sequences[name])\n        sequences[name] = [];\n    return sequences[name];\n}\nfunction keyframesAsList(keyframes) {\n    return Array.isArray(keyframes) ? keyframes : [keyframes];\n}\nfunction getValueTransition(transition, key) {\n    return transition[key]\n        ? { ...transition, ...transition[key] }\n        : { ...transition };\n}\nconst isNumber = (keyframe) => typeof keyframe === \"number\";\nconst isNumberKeyframesArray = (keyframes) => keyframes.every(isNumber);\n\nexport { createAnimationsFromSequence, getValueTransition };\n","import { spring } from '../../animation/generators/spring/index.mjs';\nimport { calcGeneratorDuration, maxGeneratorDuration } from '../../animation/generators/utils/calc-duration.mjs';\nimport { millisecondsToSeconds } from '../../utils/time-conversion.mjs';\n\n/**\n * Create a progress => progress easing function from a generator.\n */\nfunction createGeneratorEasing(options, scale = 100) {\n    const generator = spring({ keyframes: [0, scale], ...options });\n    const duration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n    return {\n        type: \"keyframes\",\n        ease: (progress) => generator.next(duration * progress).value / scale,\n        duration: millisecondsToSeconds(duration),\n    };\n}\n\nexport { createGeneratorEasing };\n","import { resolveElements } from '../render/dom/utils/resolve-element.mjs';\nimport { visualElementStore } from '../render/store.mjs';\nimport { invariant } from '../utils/errors.mjs';\nimport { GroupPlaybackControls } from './GroupPlaybackControls.mjs';\nimport { isDOMKeyframes } from './utils/is-dom-keyframes.mjs';\nimport { animateTarget } from './interfaces/visual-element-target.mjs';\nimport { createVisualElement } from './utils/create-visual-element.mjs';\nimport { animateSingleValue } from './interfaces/single-value.mjs';\nimport { createAnimationsFromSequence } from './sequence/create.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\n\nfunction animateElements(elementOrSelector, keyframes, options, scope) {\n    const elements = resolveElements(elementOrSelector, scope);\n    const numElements = elements.length;\n    invariant(Boolean(numElements), \"No valid element provided.\");\n    const animations = [];\n    for (let i = 0; i < numElements; i++) {\n        const element = elements[i];\n        /**\n         * Check each element for an associated VisualElement. If none exists,\n         * we need to create one.\n         */\n        if (!visualElementStore.has(element)) {\n            /**\n             * TODO: We only need render-specific parts of the VisualElement.\n             * With some additional work the size of the animate() function\n             * could be reduced significantly.\n             */\n            createVisualElement(element);\n        }\n        const visualElement = visualElementStore.get(element);\n        const transition = { ...options };\n        /**\n         * Resolve stagger function if provided.\n         */\n        if (typeof transition.delay === \"function\") {\n            transition.delay = transition.delay(i, numElements);\n        }\n        animations.push(...animateTarget(visualElement, { ...keyframes, transition }, {}));\n    }\n    return new GroupPlaybackControls(animations);\n}\nconst isSequence = (value) => Array.isArray(value) && Array.isArray(value[0]);\nfunction animateSequence(sequence, options, scope) {\n    const animations = [];\n    const animationDefinitions = createAnimationsFromSequence(sequence, options, scope);\n    animationDefinitions.forEach(({ keyframes, transition }, subject) => {\n        let animation;\n        if (isMotionValue(subject)) {\n            animation = animateSingleValue(subject, keyframes.default, transition.default);\n        }\n        else {\n            animation = animateElements(subject, keyframes, transition);\n        }\n        animations.push(animation);\n    });\n    return new GroupPlaybackControls(animations);\n}\nconst createScopedAnimate = (scope) => {\n    /**\n     * Implementation\n     */\n    function scopedAnimate(valueOrElementOrSequence, keyframes, options) {\n        let animation;\n        if (isSequence(valueOrElementOrSequence)) {\n            animation = animateSequence(valueOrElementOrSequence, keyframes, scope);\n        }\n        else if (isDOMKeyframes(keyframes)) {\n            animation = animateElements(valueOrElementOrSequence, keyframes, options, scope);\n        }\n        else {\n            animation = animateSingleValue(valueOrElementOrSequence, keyframes, options);\n        }\n        if (scope) {\n            scope.animations.push(animation);\n        }\n        return animation;\n    }\n    return scopedAnimate;\n};\nconst animate = createScopedAnimate();\n\nexport { animate, createScopedAnimate };\n","function isDOMKeyframes(keyframes) {\n    return typeof keyframes === \"object\" && !Array.isArray(keyframes);\n}\n\nexport { isDOMKeyframes };\n","import { useConstant } from '../../utils/use-constant.mjs';\nimport { useUnmountEffect } from '../../utils/use-unmount-effect.mjs';\nimport { createScopedAnimate } from '../animate.mjs';\n\nfunction useAnimate() {\n    const scope = useConstant(() => ({\n        current: null,\n        animations: [],\n    }));\n    const animate = useConstant(() => createScopedAnimate(scope));\n    useUnmountEffect(() => {\n        scope.animations.forEach((animation) => animation.stop());\n    });\n    return [scope, animate];\n}\n\nexport { useAnimate };\n","import { useEffect } from 'react';\n\nfunction useUnmountEffect(callback) {\n    return useEffect(() => () => callback(), []);\n}\n\nexport { useUnmountEffect };\n"],"names":["useConstant","init","ref","useRef","current","noop","any","warning","invariant","resolveElements","elements","scope","selectorCache","_a","root","document","Boolean","querySelectorAll","Element","Array","from","visualElementStore","WeakMap","GroupPlaybackControls","animations","_classCallCheck","this","filter","_createClass","key","value","onResolve","onReject","Promise","all","then","catch","propName","newValue","i","length","get","getAll","set","time","setAll","speed","max","Math","duration","methodName","forEach","controls","runAll","frameData","delta","timestamp","isProcessing","useDefaultElapsed","runNextFrame","stepsOrder","steps","reduce","acc","toRun","toRunNextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","callback","addToCurrentFrame","arguments","undefined","buffer","add","indexOf","push","cancel","index","splice","delete","process","_ref","has","createRenderStep","processStep","stepId","processFrame","min","requestAnimationFrame","frame","keepAlive","immediate","cancelFrame","transformPropOrder","transformProps","Set","camelToDash","str","replace","toLowerCase","optimizedAppearDataAttribute","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","instantAnimationState","isBezierDefinition","easing","isArray","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","_ref2","_slicedToArray","a","b","c","d","concat","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","map","featureTests","waapi","Object","hasOwnProperty","call","prototype","results","supports","_loop","calcBezier","t","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","x","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","isEasingArray","mirrorEasing","p","reverseEasing","sin","acos","circInOut","backInOut","easingLookup","anticipate","pow","easingDefinitionToFunction","definition","_definition","sanitize","v","round","floatRegex","colorRegex","singleColorRegex","isString","clamp","number","test","parse","parseFloat","transform","alpha","_objectSpread","scale","default","isColorString","type","testProp","startsWith","splitColor","aName","bName","cName","_v$match","match","_v$match2","_defineProperty","rgbUnit","clampRgbUnit","rgba","red","green","blue","_ref$alpha","alpha$1","hex","r","g","substring","parseInt","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","hsla","hue","saturation","lightness","color","mix","to","progress","hueToRgb","q","mixLinearColor","fromExpo","sqrt","colorTypes","asRGBA","find","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","combineFunctions","pipe","_len","transformers","_key","checkStringStartsWith","token","isCSSVariableName","isCSSVariableToken","cssVarTokeniser","regex","countKey","colorTokeniser","numberTokeniser","tokenise","info","_info$values","matches","tokenised","values","apply","_toConsumableArray","analyseComplexValue","originalValue","toString","numVars","numColors","numNumbers","includes","parseComplexValue","createTransformer","source","_analyseComplexValue","numValues","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","mixImmediate","origin","target","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","toFromDifference","mixNumber","createMixers","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","_ref$clamp","isClamp","inputLength","reverse","interpolator","progressInRange","fillOffset","offset","remaining","offsetProgress","defaultOffset","arr","keyframes","_ref$duration","keyframeValues","times","_ref$ease","easingFunctions","state","done","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","calculatedDuration","next","velocityPerSecond","velocity","frameDuration","velocitySampleDuration","calcGeneratorVelocity","resolveValue","prevT","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","envelope","derivative","_ref$bounce","bounce","_ref$velocity","_ref$mass","mass","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","e","f","initialGuess","result","rootIterations","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","options","keys","some","spring","resolveSpring","restDelta","restSpeed","_objectWithoutProperties","_excluded","_getSpringOptions","springOptions","isResolvedFromDuration","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","_ref$power","power","_ref$timeConstant","timeConstant","_ref$bounceDamping","bounceDamping","_ref$bounceStiffness","bounceStiffness","modifyTarget","_ref$restDelta","nearestBoundary","amplitude","ideal","timeReachedBoundary","spring$1","calcDelta","calcLatest","applyFriction","latest","checkCatchBoundary","hasUpdatedFrame","frameloopDriver","update","passTimestamp","start","stop","now","performance","maxGeneratorDuration","calcGeneratorDuration","generator","Infinity","types","decay","tween","animateValue","resolveFinishedPromise","currentFinishedPromise","animationDriver","_ref$autoplay","autoplay","_ref$delay","delay","_ref$driver","driver","keyframes$1","_ref$type","_ref$repeat","repeat","_ref$repeatDelay","repeatDelay","_ref$repeatType","repeatType","onPlay","onStop","onComplete","onUpdate","hasStopped","updateFinishedPromise","resolve","mapNumbersToKeyframes","generatorFactory","mirroredGenerator","playState","holdTime","startTime","cancelTime","resolvedDuration","totalDuration","currentTime","tick","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","iterationIsOdd","isAnimationFinished","finish","stopAnimationDriver","play","reject","newTime","newSpeed","pause","complete","sample","acceleratedValues","createAcceleratedAnimation","valueName","_options$duration","requiresPregeneratedKeyframes","sampleAnimation","pregeneratedKeyframes","animation","element","keyframeOptions","animate","fill","iterations","direction","animateStyle","owner","cancelAnimation","safeCancel","onfinish","getFinalKeyframe","playbackRate","setWithVelocity","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","isAnimatable","maxDefaults","applyDefaultFilter","_v$slice$split","slice","_v$slice$split2","name","defaultValue","functionRegex","functions","join","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","y","z","perspective","transformPerspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","defaultValueTypes","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","isZero","getZeroUnit","potentialUnitType","getKeyframes","transition","isTargetAnimatable","_toArray","fillWildcardKeyframes","animateMotionValue","valueTransition","getValueTransition","_transition$elapsed","originKeyframe","targetKeyframe","isOriginAnimatable","getVelocity","when","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","setValue","createInstantAnimation","HTMLElement","getProps","acceleratedAnimation","isMotionValue","isWillChangeMotionValue","isZeroValueString","isKeyframesTarget","resolveFinalValueInKeyframes","removeItem","item","SubscriptionManager","subscriptions","handler","_this","numSubscriptions","MotionValue","version","timeDelta","lastUpdated","canTrackVelocity","events","updateAndNotify","render","prev","scheduleVelocityCheck","change","notify","velocityChange","renderRequest","velocityCheck","hasAnimated","subscription","on","eventName","_this2","unsubscribe","getSize","eventManagers","clear","passiveEffect","stopPassiveEffect","startAnimation","_this3","animationStart","animationComplete","clearAnimation","animationCancel","clearListeners","motionValue","testValueType","dimensionValueTypes","findDimensionValueType","valueTypes","findValueType","resolveVariantFromProps","props","custom","currentValues","variants","setMotionValue","visualElement","hasValue","getValue","addValue","setTarget","resolved","getCurrent","resolveVariant","makeTargetAnimatable","_ref$transitionEnd","transitionEnd","getOriginFromTransition","animateTarget","_ref2$delay","transitionOverride","_visualElement$makeTa","_visualElement$makeTa2","willChange","animationTypeState","animationState","getState","valueTarget","protectedKeys","needsAnimating","shouldBlock","shouldBlockAnimation","window","HandoffAppearAnimations","appearId","shouldReduceMotion","remove","_get","Reflect","bind","property","receiver","base","object","getPrototypeOf","superPropBase","desc","getOwnPropertyDescriptor","scaleCorrectors","isForcedMotionValue","layout","layoutId","scrapeMotionValuesFromProps","prevProps","style","newValues","splitCSSVariableRegex","maxDepth","getVariableValue","depth","_parseCSSVariable","exec","_match","parseCSSVariable","_parseCSSVariable2","fallback","getComputedStyle","getPropertyValue","trim","resolveCSSVariables","assign","obj","TypeError","_objectDestructuringEmpty","isBrowser","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","_ref3","_ref3$paddingLeft","_ref3$paddingRight","_ref4","_ref5","_ref5$paddingTop","_ref5$paddingBottom","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","toType","fromType","numKeyframes","fromIndex","removedTransforms","removeNonTranslationalTransform","jump","scrollY","pageYOffset","convertedTarget","changedKeys","originBbox","measureViewportBox","elementComputedStyle","display","setStaticValue","targetBbox","convertChangedValueTypes","_ref12","_ref13","scrollTo","unitConversion","hasPositionalKey","prefersReducedMotion","hasReducedMotionListener","isVariantLabel","variantProps","isControllingVariants","featureProps","exit","drag","focus","hover","tap","pan","inView","featureDefinitions","isEnabled","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","parent","presenceContext","reducedMotionConfig","visualState","children","isVariantNode","Map","features","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","latestValues","triggerBuild","renderInstance","renderState","projection","scheduleRender","baseTarget","initialValues","initial","variantChildren","manuallyAnimateOnMount","_this$scrapeMotionVal","initialMotionValues","_props","_prevProps","instance","mount","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","unmount","valueIsTransform","removeOnChange","latestValue","isTransformDirty","removeOnRenderRequest","other","sortInstanceNodePosition","isStrict","preloadedFeatures","projectionId","initialLayoutGroupConfig","ProjectionNodeConstructor","MeasureLayout","_this4","renderedProps","_excluded2","_featureDefinitions$n","FeatureConstructor","Feature","ProjectionNode","MeasureLayoutComponent","dragConstraints","layoutScroll","layoutRoot","setOptions","alwaysMeasureLayout","animationType","initialPromotionConfig","feature","isMounted","build","measureInstanceViewportBox","canMutate","makeTargetAnimatableFromInstance","transformTemplate","prevPresenceContext","listener","nextValue","prevValue","existingValue","getStaticValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","transformPagePoint","getClosestVariantNode","getVariantContext","context","prop","child","closestVariantNode","removeValueFromRenderState","readValueFromInstance","valueFromInitial","getBaseTargetFromProps","_this$events$eventNam","args","_key2","DOMVisualElement","_VisualElement","_inherits","_super","_createSuper","compareDocumentPosition","vars","transformValues","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","readValue","setBaseTarget","checkTargetForNewValues","parseDomVariant","translateAlias","numTransforms","getValueAsType","buildHTMLStyles","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","transformIsDefault","_ref$enableHardwareAc","enableHardwareAcceleration","_ref$allowTransformNo","allowTransformNone","transformString","transformName","buildTransform","_transformOrigin$orig","_transformOrigin$orig2","_transformOrigin$orig3","calcOrigin","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","_ref$pathSpacing","pathSpacing","_ref$pathOffset","pathOffset","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","camelCaseAttributes","renderHTML","styleProp","getProjectionStyles","setProperty","SVGVisualElement","_DOMVisualElement","defaultType","getAttribute","scrapeMotionValuesFromProps$1","charAt","toUpperCase","_styleProp","setAttribute","renderSVG","tag","tagName","_getPrototypeOf","transformPoint","convertBoundingBoxToBox","point","topLeft","bottomRight","transformBoxPoints","getBoundingClientRect","HTMLVisualElement","computedStyle","childSubscription","textContent","createVisualElement","node","SVGElement","isSVGElement","animateSingleValue","motionValue$1","calcNextTime","labels","wrap","rangeSize","getEasingForSegment","addKeyframes","sequence","endTime","keyframe","at","eraseKeyframes","compareByTime","defaultSegmentEasing","createAnimationsFromSequence","_ref$defaultTransitio","defaultTransition","sequenceTransition","defaultDuration","animationDefinitions","sequences","elementCache","timeLabels","prevTime","segment","_segment","subject","_segment$","resolveValueSequence","valueKeyframes","valueSequence","elementIndex","numElements","valueKeyframesAsList","keyframesAsList","_valueTransition$dela","_valueTransition$time","_valueTransition$type","remainingTransition","_valueTransition$ease","calculatedDelay","absoluteDelta","isNumberKeyframesArray","springTransition","springEasing","createGeneratorEasing","targetTime","remainder","unshift","getValueSequence","getSubjectSequence","subjectSequence","valueSequences","sort","valueOffset","valueEasing","_valueSequence$_i","isNumber","animateElements","elementOrSelector","createScopedAnimate","valueOrElementOrSequence","animateSequence","isDOMKeyframes","useAnimate","useEffect"],"sourceRoot":""}